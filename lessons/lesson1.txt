1) Формулирование требований к проекту
	• Java 11 – 11.0.7 крайняя LTS версия
	• Spring – стек технологий облегчающий доступ к БД, rest api и в целом упрощающий создание java приложения. (Spring Framework, String Boot, Spring Data, Spring Security)
	• Angular 2+ (Node.js) – инструмент для разработки веб интерфейса, использует html + typeScript
	• Liquibase – это бесплатный инструмент с открытым исходным кодом, предназначенный для миграции с одной версии базы данных на другую
	• Jooq –  в замену hibernate, который позволяет генерировать классы на основе таблиц БД
	• Nginx
	• Postgresql
	• Maven
	• Git
	• IDE

2) Паттерн MVC
	MVC расшифровывается как модель-представление-контроллер (от англ. model-view-controller). Это способ организации кода, который предполагает выделение блоков, отвечающих за решение разных задач. Один блок отвечает за данные приложения, другой отвечает за внешний вид, а третий контролирует работу приложения. Компоненты MVC:
    • Модель — этот компонент отвечает за данные, а также определяет структуру приложения. Например, если вы создаете To-Do приложение, код компонента model будет определять список задач и отдельные задачи.
    • Представление — этот компонент отвечает за взаимодействие с пользователем. То есть код компонента view определяет внешний вид приложения и способы его использования.
    • Контроллер — этот компонент отвечает за связь между model и view. Код компонента controller определяет, как сайт реагирует на действия пользователя. По сути, это мозг MVC-приложения.

3) К сдедующему занятию подготовить рабочее место, необходимо:
    • Java 11
    • NodeJS 12.18.0
    • Nginx
    • Postgres 12.3.1
    • Maven
    • Git
    • IDE